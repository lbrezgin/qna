div id="answer-#{answer.id}" class="answer"
  - if answer.body
    - cache answer do
      = form_with model: answer, class: 'hidden form', html: { id: "edit-answer-#{answer.id}" }, local: false do |f|
        h1 Editing
        p
          = f.label :body, 'Your answer'
          br
          = f.text_area :body
        p
          h2= f.label :files
          = f.file_field :files, multiple: true, direct_upload: true
        p
          - answer.files.each do |file|
            div id="attachment-#{file.id}"
              p= (link_to "X", attachment_path(file), method: :delete, remote: true) + " #{file.filename}"
        h2 Links
        #links
          .links
            = link_to_add_association 'add link', f, :links
          .answer-links-manage
            - answer.links.each do |link|
              div id="link-#{link.id}"
                p= (link_to "X", link_path(link), method: :delete, remote: true) + " #{link.name}"
        = f.submit 'Save', class: "button"

  - if answer.best
    p class="opinion" = "(Best answer by question's author opinion)"

  .actions
    - if can?(:update, answer) && can?(:destroy, answer)
      = link_to 'Edit', '#', class: 'edit-answer-link link-button', data: { answer_id: answer.id }
      = link_to 'Delete', answer_path(answer), class: 'link-button', method: :delete, remote: true
    - if can?(:mark_as_best, answer)
      = link_to 'Mark as best', mark_as_best_answer_path(answer), class: 'link-button', method: :patch, remote: true

  p= answer.body

  div.voting-container
    = link_to 'Like', like_answer_path(answer), class: "voting", method: :post, remote: true, data: { type: :json, resource: "answer", id: answer.id }
    div class="rating" id="answer-rating-#{answer.id}"
      = answer.rating
    = link_to 'Dislike', dislike_answer_path(answer), class: "voting", method: :post, remote: true, data: { type: :json, resource: "answer", id: answer.id }
  div id="answer-error-#{answer.id}"

  - if answer.links.any?
    .links
      h2 Links
      ul
        - answer.links.each do |link|
          li= link_to link.name, link.url
          - if link.gist?
            div.gist-content data-gist-id=link.get_id_from_url(link.url)

  - if answer.files.attached?
    h2 Attachments
    ul
      - answer.files.each do |file|
        li= link_to file.filename.to_s, url_for(file)

  -if user_signed_in?
    div class="answer-#{answer.id}-comment-errors"

    div class="new-answer-#{answer.id}-comment"
      = form_with model: Comment.new, url: answer_comments_path(answer), local: false, method: :post do |f|
        h1 Add comment
        p
          = f.label :content
          br
          = f.text_area :content
        = f.submit 'Comment', class: "button"
  -else
    p You need to sign in or to leave a comment

  div class="answer-#{answer.id}-comments"
    h2 Comments
    - answer.comments.each do |comment|
      - cache comment do
        p= comment.content
